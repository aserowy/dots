apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: replica
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valkey
    app.kubernetes.io/part-of: valkey
    app.kubernetes.io/version: 8.1.3
    helm.sh/chart: valkey-3.0.30
  name: valkey-replicas
  namespace: caching
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: replica
      app.kubernetes.io/instance: valkey
      app.kubernetes.io/name: valkey
  serviceName: valkey-headless
  template:
    metadata:
      annotations:
        checksum/configmap: c8cdc0c4c772ac3192446a08bf401c29f1e39f33614657d36e4bb1692e34b39f
        checksum/health: e3a0f06458110f02986bb8df4391c43567355d3582dd02f25447184391196fbc
        checksum/scripts: 7c6f20e38b0c8339ff1289c764bf073e3ee5a8e2cac503d296c7b177b24dd511
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app.kubernetes.io/component: replica
        app.kubernetes.io/instance: valkey
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: valkey
        app.kubernetes.io/version: 8.1.3
        helm.sh/chart: valkey-3.0.30
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: replica
                    app.kubernetes.io/instance: valkey
                    app.kubernetes.io/name: valkey
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-replica.sh
          command:
            - /bin/bash
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: VALKEY_REPLICATION_MODE
              value: replica
            - name: VALKEY_PRIMARY_HOST
              value: valkey-primary-0.valkey-headless.caching.svc.cluster.local
            - name: VALKEY_PRIMARY_PORT_NUMBER
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: VALKEY_PASSWORD_FILE
              value: /opt/bitnami/valkey/secrets/valkey-password
            - name: VALKEY_PRIMARY_PASSWORD_FILE
              value: /opt/bitnami/valkey/secrets/valkey-password
            - name: VALKEY_TLS_ENABLED
              value: "no"
            - name: VALKEY_PORT
              value: "6379"
          image: docker.io/bitnami/valkey:8.1.3-debian-12-r3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local_and_primary.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: valkey
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local_and_primary.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 22
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: redis
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /opt/bitnami/scripts/start-scripts
              name: start-scripts
            - mountPath: /health
              name: health
            - mountPath: /opt/bitnami/valkey/secrets/
              name: valkey-password
            - mountPath: /data
              name: valkey-data
            - mountPath: /opt/bitnami/valkey/mounted-etc
              name: config
            - mountPath: /opt/bitnami/valkey/etc
              name: empty-dir
              subPath: app-conf-dir
            - mountPath: /tmp
              name: empty-dir
              subPath: tmp-dir
      enableServiceLinks: true
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: valkey-replica
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 493
            name: valkey-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: valkey-health
          name: health
        - name: valkey-password
          secret:
            items:
              - key: password
                path: valkey-password
            secretName: valkey
        - configMap:
            name: valkey-configuration
          name: config
        - emptyDir: {}
          name: empty-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        labels:
          app.kubernetes.io/component: replica
          app.kubernetes.io/instance: valkey
          app.kubernetes.io/name: valkey
        name: valkey-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
