apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.8.2
    helm.sh/chart: mariadb-galera-15.0.1
  name: mariadb-mariadb-galera
  namespace: homeassistant
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: mariadb-mariadb-galera-headless
  template:
    metadata:
      annotations:
        checksum/config: 29182b60f0f33e34448905887de7f60265b4f94973e8ef6d8639163d9ba8b430
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
        app.kubernetes.io/version: 11.8.2
        helm.sh/chart: mariadb-galera-15.0.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mariadb
                    app.kubernetes.io/name: mariadb-galera
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - command:
            - bash
            - -ec
            - |
              exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_DEFAULT_PORT_NUMBER
              value: "3306"
            - name: MARIADB_GALERA_CLUSTER_NAME
              value: galera
            - name: MARIADB_GALERA_CLUSTER_ADDRESS
              value: gcomm://mariadb-mariadb-galera-0.mariadb-mariadb-galera-headless.homeassistant.svc.cluster.local,mariadb-mariadb-galera-1.mariadb-mariadb-galera-headless.homeassistant.svc.cluster.local,mariadb-mariadb-galera-2.mariadb-mariadb-galera-headless.homeassistant.svc.cluster.local
            - name: MARIADB_ROOT_USER
              value: root
            - name: MARIADB_ROOT_PASSWORD_FILE
              value: /opt/bitnami/mariadb/secrets/mariadb-root-password
            - name: MARIADB_USER
              value: homeassistant
            - name: MARIADB_PASSWORD_FILE
              value: /opt/bitnami/mariadb/secrets/mariadb-password
            - name: MARIADB_DATABASE
              value: homeassistant
            - name: MARIADB_GALERA_MARIABACKUP_USER
              value: mariabackup
            - name: MARIADB_GALERA_MARIABACKUP_PASSWORD_FILE
              value: /opt/bitnami/mariadb/secrets/mariadb-galera-mariabackup-password
            - name: MARIADB_ENABLE_LDAP
              value: "no"
            - name: MARIADB_ENABLE_TLS
              value: "no"
          image: docker.io/bitnami/mariadb-galera:11.8.2-debian-12-r3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mariadb-galera
          ports:
            - containerPort: 3306
              name: mysql
            - containerPort: 4567
              name: galera
            - containerPort: 4568
              name: ist
            - containerPort: 4444
              name: sst
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 1536Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /opt/bitnami/mariadb/.bootstrap
              name: previous-boot
            - mountPath: /bitnami/mariadb
              name: data
            - mountPath: /bitnami/conf/my.cnf
              name: mariadb-galera-config
              subPath: my.cnf
            - mountPath: /opt/bitnami/mariadb/secrets/
              name: mariadb-galera-credentials
            - mountPath: /tmp
              name: empty-dir
              subPath: tmp-dir
            - mountPath: /opt/bitnami/mariadb/conf
              name: empty-dir
              subPath: app-conf-dir
            - mountPath: /opt/bitnami/mariadb/tmp
              name: empty-dir
              subPath: app-tmp-dir
            - mountPath: /opt/bitnami/mariadb/logs
              name: empty-dir
              subPath: app-logs-dir
      initContainers:
        - args:
            - -ec
            - |
              #!/bin/bash

              . /opt/bitnami/scripts/libfs.sh
              # We copy the logs folder because it has symlinks to stdout and stderr
              if ! is_dir_empty /opt/bitnami/mariadb/logs; then
                cp -r /opt/bitnami/mariadb/logs /emptydir/app-logs-dir
              fi
          command:
            - /bin/bash
          image: docker.io/bitnami/mariadb-galera:11.8.2-debian-12-r3
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 1536Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /emptydir
              name: empty-dir
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: mariadb-mariadb-galera
      volumes:
        - emptyDir: {}
          name: previous-boot
        - name: mariadb-galera-credentials
          secret:
            items:
              - key: mariadb-root-password
                path: mariadb-root-password
              - key: mariadb-password
                path: mariadb-password
              - key: mariadb-galera-mariabackup-password
                path: mariadb-galera-mariabackup-password
            secretName: mariadb
        - configMap:
            name: mariadb-mariadb-galera-configuration
          name: mariadb-galera-config
        - emptyDir: {}
          name: empty-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/instance: mariadb
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mariadb-galera
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
