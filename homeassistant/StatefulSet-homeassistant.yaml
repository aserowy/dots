apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: homeassistant
  namespace: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
    spec:
      containers:
        - env:
            - name: TZ
              value: Europe/Berlin
          image: ghcr.io/home-assistant/home-assistant:2025.7
          livenessProbe:
            httpGet:
              path: /
              port: 8123
          name: homeassistant
          ports:
            - containerPort: 8123
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 200m
              memory: 500Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            failureThreshold: 15
            httpGet:
              path: /
              port: 8123
            initialDelaySeconds: 30
          volumeMounts:
            - mountPath: /config
              name: data
      initContainers:
        - command:
            - /bin/sh
            - -c
            - |
              echo "create statics if not exist: automations.yaml, scenes.yaml, and scripts.yaml"
              if [ ! -f automations.yaml ]; then
                  touch automations.yaml
              fi
              if [ ! -f scenes.yaml ]; then
                  touch scenes.yaml
              fi
              if [ ! -f scripts.yaml ]; then
                  touch scripts.yaml
              fi

              cp --force /tmp/secrets.yaml secrets.yaml

              if [ -f configuration.yaml ]
              then
                echo "Backing up existing configuration file to configuration-helm-backup.yaml"
                cp --force configuration.yaml configuration-helm-backup.yaml
              else
                echo "configuration.yaml does not exists, creating one from config map configmap-configuration.yaml"
                cp /tmp/configmap-configuration.yaml configuration.yaml
              fi

              yq --inplace '. *= load("/tmp/configmap-configuration.yaml") ' configuration.yaml
              yq eval-all  '. as $item ireduce ({}; . * $item )' /tmp/configmap-configuration.yaml configuration.yaml > configuration.yaml
          image: mikefarah/yq:4.45.4
          name: copy-base-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /config
              name: data
            - mountPath: /tmp/configmap-configuration.yaml
              name: config
              subPath: configuration.yaml
            - mountPath: /tmp/secrets.yaml
              name: secrets
              subPath: secrets.yaml
          workingDir: /config
        - command:
            - bash
            - -c
            - |
              if [ ! -d "/config/custom_components/hacs" ]; then
                wget -O - https://get.hacs.xyz | bash -
              fi
          image: bash:5.2.37
          name: setup-hacs
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /config
              name: data
          workingDir: /config
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: homeassistant-pvc
        - configMap:
            name: homeassistant-cm
          name: config
        - name: secrets
          secret:
            secretName: homeassistant
