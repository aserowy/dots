apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/version: 2.5.1
    helm.sh/chart: zigbee2mqtt-2.5.1
  name: zigbee2mqtt
  namespace: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      annotations:
        checksum/configuration: 7e4625685cf079ad27722cdb5f39813034347015d417a889233804db5ffef86c
      labels:
        app: zigbee2mqtt
        app.kubernetes.io/instance: zigbee2mqtt
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: zigbee2mqtt
        app.kubernetes.io/version: 2.5.1
        helm.sh/chart: zigbee2mqtt-2.5.1
    spec:
      containers:
        - env:
            - name: Z2M_ONBOARD_NO_SERVER
              value: "1"
            - name: TZ
              value: UTC
          image: koenkk/zigbee2mqtt:2.5.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          name: zigbee2mqtt
          ports:
            - containerPort: 8080
              name: web
              protocol: TCP
          resources:
            limits:
              akri.sh/akri-zigbee-stick: "1"
              cpu: 200m
              memory: 600Mi
            requests:
              akri.sh/akri-zigbee-stick: "1"
              cpu: 200m
              memory: 600Mi
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /app/data/configmap-configuration.yaml
              name: config-volume
              subPath: configuration.yaml
            - mountPath: /app/data/
              name: data-volume
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - -c
            - |
              if [ -f configuration.yaml ]
              then
                echo "Backing up existing configuration file to /app/data/configuration-helm-backup.yaml"
                cp configuration.yaml configuration-helm-backup.yaml
              else
                echo "configuration.yaml does not exists, creating one from config map /app/data/configmap-configuration.yaml"
                cp configmap-configuration.yaml configuration.yaml
              fi

              yq --inplace '. *= load("configmap-configuration.yaml") | del(.version) ' configuration.yaml
              yq eval-all  '. as $item ireduce ({}; . * $item )' configmap-configuration.yaml configuration.yaml > configuration.yaml
          command:
            - /bin/sh
          image: mikefarah/yq:4.45.1
          imagePullPolicy: IfNotPresent
          name: yq
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /app/data/
              name: data-volume
            - mountPath: /app/data/configmap-configuration.yaml
              name: config-volume
              subPath: configuration.yaml
          workingDir: /app/data
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - configMap:
            name: zigbee2mqtt
          name: config-volume
        - emptyDir: {}
          name: data-volume
