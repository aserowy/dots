apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zigbee2mqtt
  namespace: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      labels:
        app: zigbee2mqtt
    spec:
      containers:
        - image: docker.io/koenkk/zigbee2mqtt:2.5.1
          name: zigbee2mqtt
          ports:
            - containerPort: 8080
          resources:
            limits:
              akri.sh/akri-zigbee-stick: "1"
              cpu: 200m
              memory: 600Mi
            requests:
              akri.sh/akri-zigbee-stick: "1"
              cpu: 200m
              memory: 600Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /app/data
              name: data
      initContainers:
        - command:
            - /bin/sh
            - -c
            - |
              cp --force /tmp/secret.yaml secret.yaml

              if [ -f configuration.yaml ]
              then
                echo "Backing up existing configuration file to /app/data/configuration-helm-backup.yaml"
                cp --force configuration.yaml configuration-helm-backup.yaml
              else
                echo "configuration.yaml does not exists, creating one from config map /app/data/configmap-configuration.yaml"
                cp /tmp/configmap-configuration.yaml configuration.yaml
              fi

              yq --inplace '. *= load("/tmp/configmap-configuration.yaml") | del(.version) ' configuration.yaml
              yq eval-all  '. as $item ireduce ({}; . * $item )' /tmp/configmap-configuration.yaml configuration.yaml > configuration.yaml
          image: mikefarah/yq:4.45.4
          name: copy-base-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /app/data
              name: data
            - mountPath: /tmp/configmap-configuration.yaml
              name: config
              subPath: configuration.yaml
            - mountPath: /tmp/secret.yaml
              name: secrets
              subPath: secret.yaml
          workingDir: /app/data
      securityContext:
        fsGroup: 1099
        runAsGroup: 1099
        runAsUser: 1099
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zigbee2mqtt-pvc
        - configMap:
            name: zigbee2mqtt-cm
          name: config
        - name: secrets
          secret:
            secretName: zigbee2mqtt
