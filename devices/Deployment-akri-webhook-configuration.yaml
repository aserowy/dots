apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: akri
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akri-webhook-configuration
    app.kubernetes.io/part-of: akri
    app.kubernetes.io/version: 0.13.8
    helm.sh/chart: akri-0.13.8
  name: akri-webhook-configuration
  namespace: devices
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: akri
      app.kubernetes.io/name: akri-webhook-configuration
      app.kubernetes.io/part-of: akri
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: akri
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: akri-webhook-configuration
        app.kubernetes.io/part-of: akri
        app.kubernetes.io/version: 0.13.8
        helm.sh/chart: akri-0.13.8
    spec:
      containers:
        - args:
            - --tls-crt-file=/secrets/tls.crt
            - --tls-key-file=/secrets/tls.key
            - --port=8443
          image: ghcr.io/project-akri/akri/webhook-configuration:v0.13.8
          imagePullPolicy: Always
          name: webhook
          resources:
            limits:
              cpu: 26m
              memory: 100Mi
            requests:
              cpu: 15m
              memory: 100Mi
          volumeMounts:
            - mountPath: /secrets
              name: secrets
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: akri-webhook-configuration
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: secrets
          secret:
            secretName: akri-webhook-configuration
