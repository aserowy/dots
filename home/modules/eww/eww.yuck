;; all icons are nf-md-...

(defwindow example
    :monitor 1
    :geometry (geometry
        :y "20"
        :width "425"
        :anchor "top right"
    )
    :stacking "bottom"
    :namespace "example"
    (box
        :orientation "vertical"
        :spacing 68
        :space-evenly false
        ;; (spotify)
        (notifications)
    )
)

;; SPOTIFY
;; (deflisten spotify_now_playing_artist
;;     'playerctl -p spotify --follow metadata --format {{artist}}'
;; )
;; (deflisten spotify_now_playing_title
;;     'playerctl -p spotify --follow metadata --format {{title}}'
;; )
;; 
;; (defwidget spotify []
;;     (box
;;         :class "container"
;;         :orientation "vertical"
;;         :space-evenly false
;;         (box
;;             :halign "start"
;;             :orientation "horizontal"
;;         )
;;         (box
;;             :orientation "horizontal"
;;             (box
;;                 :orientation "horizontal"
;;                 :halign "start"
;;                 :spacing 10
;;                 :space-evenly false
;;                 (label
;;                     :class "nerd-icon"
;;                     :text "󰓇 "
;;                 )
;;                 (label
;;                     :halign "end"
;;                     :class "highlight"
;;                     :text spotify_now_playing_artist
;;                 )
;;                 (label
;;                     :halign "center"
;;                     :angle 15
;;                     :wrap true
;;                     :text "with"
;;                 )
;;                 (label
;;                     :halign "start"
;;                     :class "highlight"
;;                     :text spotify_now_playing_title
;;                 )
;;             )
;;         )
;;     )
;; )

;; NOTIFICATIONS
(defpoll notifications :initial '{ "data": [[]] }' :interval '1s' 'dunstctl history')
(defpoll notifications-paused :initial "false" :interval "1s" "dunstctl is-paused")

(defwidget notifications []
    (box
        :class "container"
        :orientation "vertical"
        :spacing 10
        :space-evenly false
        (box
            :class "nerd-icon"
            :halign "end"
            :orientation "horizontal"
            :spacing 20
            :space-evenly false
            (button
                :onclick "dunstctl set-paused toggle"
                (label :text "${ notifications-paused ? '󰂠' : '󰂞' }")
            )
            (button
                :onclick "dunstctl close-all && dunstctl history-clear"
                (label :text "󱏫")
            )
        )
        (box 
            :orientation "vertical"
            :spacing 22
            :space-evenly false
            (box
                :halign "end"
                :orientation "vertical"
                :space-evenly false
                :visible {arraylength(notifications['data'][0]) == 0}
                (label :text "No Notifications.")
            )
            (for notification in {notifications['data'][0]}
                (notification-entry :notification notification)
            )
        )
    )
)

(defwidget notification-entry [notification]
    (eventbox
        :onclick "dunstctl history-pop ${notification['id']['data']} && dunstctl action 0 && dunstctl close"
        (box
            :orientation "vertical"
            :spacing 4
            :space-evenly false
            (label
                :class "highlight"
                :halign "end"
                :text {notification['summary']['data']}
            )
            (label
                :halign "end"
                :text {notification['body']['data']}
            )
        )
    )
)
