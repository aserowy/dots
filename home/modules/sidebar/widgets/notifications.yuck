(deflisten notifications
    :initial '{ "data": [[]] }'
    "
    dunstctl history | jq -r tostring

    dbus-monitor \
        \"path='/org/freedesktop/Notifications',interface='org.freedesktop.Notifications',member='NotificationClosed'\" \
        \"path='/org/freedesktop/Notifications',interface='org.dunstproject.cmd0',member='NotificationClearHistory'\" |
        while read -r line; do dunstctl history | jq -r tostring; done
    "
)
(deflisten notifications-paused
    :initial 'false'
    "
    dunstctl is-paused

    dbus-monitor \"path='/org/freedesktop/Notifications',member='PropertiesChanged'\" |
        while read -r line; do dunstctl is-paused; done
    "
)


(defwidget notifications []
    (box
        :class "${ arraylength(notifications['data'][0]) == 0 ? 'container-disabled' : 'container' }"
        :orientation "vertical"
        :spacing 10
        :space-evenly false
        (box
            :class "nerd-icon"
            :halign "end"
            :orientation "horizontal"
            :spacing 20
            :space-evenly false
            (button
                :onclick "dunstctl set-paused toggle"
                (label :text "${ notifications-paused ? '󰂠' : '󰂞' }")
            )
            (button
                :onclick "dunstctl close-all && dunstctl history-clear"
                (label :text "󱏫")
            )
        )
        (box
            :orientation "vertical"
            :spacing 22
            :space-evenly false
            (box
                :halign "end"
                :orientation "vertical"
                :space-evenly false
                :visible {arraylength(notifications['data'][0]) == 0}
                (label
                    :text "No Notifications."
                    :wrap true)
            )
            (for notification in {notifications['data'][0]}
                (notification-entry :notification notification)
            )
        )
    )
)

(defwidget notification-entry [notification]
    (eventbox
        :onclick "dunstctl history-pop ${notification['id']['data']} && dunstctl action 0 && dunstctl close"
        (box
            :orientation "vertical"
            :spacing 4
            :space-evenly false
            (label
                :class "highlight"
                :halign "end"
                :wrap true
                :text {notification['summary']['data']}
            )
            (label
                :halign "end"
                :wrap true
                :markup {notification['body']['data']}
            )
        )
    )
)
